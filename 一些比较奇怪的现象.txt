1.  这样定义对象不合法，真奇怪
class Test
{
public:
	Test(int){}
	Test(){}
	void fun(){}
};


void main()
{
	Test a(1);
	Test b;
	Test c(); // 编译不过
	Test *d = new Test ();
	return;
}

2.  重载
	void fun(long a);
	void fun(long a) const;	
    是重载
    
    void fun(long a);
	long fun(long a);	
    不是重载
   
3.  隐藏只会隐藏成员函数不会隐藏成员变量
class B
{
public:
	B(){data = 1;}
	void fun() {cout <<  data << endl;};
private:
	int data;
};

class D:public B
{
public:
	D(){data = 2;}
private:
	int data;
};

void main()
{
	D d;
	d.fun();
	return;
}
// 输出1 

4.  关于dynamic_cast, static_cast, const_cast
dynamic_cast 用于子类和基类之间的转化，但是基类向子类转化时，基类要有虚函数，否则会编译出错；static_cast则没有这个限制。
            另外，基类指针要是不是子类的类型的话，转化后为NULL
static_cast 可以做dynamic_cast和const_cast的事情，安全性较差
const_cast 只能将const变量转化成非const变量，非const变量是不能转化成const变量的
